"As a ?, I do ? , So that my goal is ?"

User Roles:

traveler
agent
admin 

traveler actions: 

1. list available flights
2. fill details/book flight/ w/ booking id
3. buy ticket
4. cancel ticket

agent has more functionality

admin can add/delete flights or cancel a flight and refund all tickets

Backend Microservices

Flight list/update service
1. list all flights                 flight/all
2. list all flights from A to B     flight/{date}/BWI/LAX
3. decrement flight capacity        flight/{id}/decrement
3. increment flight capacity        flight/{id}/increment

User front desk service - FOLLOW THE UTOPIA FLOW

Bookings Service
1. Create bookingId with flightID and bookerId and isActive
   and call flight update service to decrement flight capacity
   INSERT INTO TBL_BOOKING (BOOKINGID, FLIGHTID, ISACTIVE, STRIPEID, BOOKERID) VALUES ( 10 , 22, TRUE,“XXX”, 44 );

2. set booking to inactive
   UPDATE TBL_BOOKING SET ISACTIVE = FALSE

Event Driven Timer Service, 60 buckets
1. INSERT EACH NEW BOOKING INTO 
the circular list of 60 buckets, Hash Table of <bookingId, bucket>
2. Insert bookindId + timestamp into current bucket
3. Each 10 seconds set the tail bucket bookings to inactive
4. Delete the tail bucket, insert the new front bucket

Payment Service : WE NEED A TRANSACTION TABLE (transactionID (pk) userId (fk) bookerId  amount flightId)
1. buy - create buy transaction if a booking is active otherwise 400
2. refund - roll back the previous buy transaction and release flight capacity

